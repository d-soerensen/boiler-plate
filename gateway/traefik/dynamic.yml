# Traefik dynamic configuration
http:
  middlewares:
    # CORS middleware
    cors:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        accessControlAllowOriginList:
          - "http://localhost:3000"
          - "http://localhost:4200"
          - "https://intellifinder.com"
        accessControlAllowHeaders:
          - "Content-Type"
          - "Authorization"
          - "X-Requested-With"
        accessControlMaxAge: 100
        addVaryHeader: true

    # Rate limiting middleware
    rate-limit:
      rateLimit:
        burst: 100
        average: 50

    # Authentication middleware
    auth:
      forwardAuth:
        address: "http://auth-service:8080/auth/validate"
        authResponseHeaders:
          - "X-User-Id"
          - "X-User-Roles"

    # Circuit breaker middleware
    circuit-breaker:
      circuitBreaker:
        expression: "NetworkErrorRatio() > 0.3 || ResponseCodeRatio(500, 600, 0, 600) > 0.3"
        checkPeriod: "10s"
        fallbackDuration: "30s"
        recoveryDuration: "10s"

    # Retry middleware
    retry:
      retry:
        attempts: 3
        initialInterval: "100ms"

    # Compression middleware
    compress:
      compress: {}

    # Security headers middleware
    security-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Frame-Options: "DENY"
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"

    # Strip prefix middleware for API routes
    strip-api-prefix:
      stripPrefix:
        prefixes:
          - "/api/v1"

  routers:
    # API Gateway router
    api-gateway:
      rule: "Host(`api.intellifinder.local`)"
      service: "gateway"
      middlewares:
        - "cors"
        - "rate-limit"
        - "security-headers"
        - "retry"
        - "circuit-breaker"

    # Auth service router
    auth-service:
      rule: "Host(`api.intellifinder.local`) && PathPrefix(`/auth`)"
      service: "auth-service"
      middlewares:
        - "cors"
        - "security-headers"
        - "strip-api-prefix"

    # Tasks service router
    tasks-service:
      rule: "Host(`api.intellifinder.local`) && PathPrefix(`/tasks`)"
      service: "tasks-service"
      middlewares:
        - "cors"
        - "auth"
        - "security-headers"
        - "strip-api-prefix"

    # Collections service router
    collections-service:
      rule: "Host(`api.intellifinder.local`) && PathPrefix(`/collections`)"
      service: "collections-service"
      middlewares:
        - "cors"
        - "auth"
        - "security-headers"
        - "strip-api-prefix"

    # Forms service router
    forms-service:
      rule: "Host(`api.intellifinder.local`) && PathPrefix(`/forms`)"
      service: "forms-service"
      middlewares:
        - "cors"
        - "auth"
        - "security-headers"
        - "strip-api-prefix"

    # Tags service router
    tags-service:
      rule: "Host(`api.intellifinder.local`) && PathPrefix(`/tags`)"
      service: "tags-service"
      middlewares:
        - "cors"
        - "auth"
        - "security-headers"
        - "strip-api-prefix"

  services:
    gateway:
      loadBalancer:
        servers:
          - url: "http://gateway:8080"

    auth-service:
      loadBalancer:
        servers:
          - url: "http://auth-service:8080"

    tasks-service:
      loadBalancer:
        servers:
          - url: "http://tasks-service:8080"

    collections-service:
      loadBalancer:
        servers:
          - url: "http://collections-service:8080"

    forms-service:
      loadBalancer:
        servers:
          - url: "http://forms-service:8080"

    tags-service:
      loadBalancer:
        servers:
          - url: "http://tags-service:8080"
